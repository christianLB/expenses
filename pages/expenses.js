import { useRef } from "react";
import Head from "next/head";
import Table from "../components/DataTable/DataTable.tsx";
import {
  NumberInput,
  NumberInputField,
  NumberInputStepper,
  NumberIncrementStepper,
  NumberDecrementStepper,
  Box,
  Text,
  VStack,
  Spinner,
} from "@chakra-ui/react";
import { useExpensesContext } from "../hooks/expensesContext.tsx";
import LoginBtn from "../components/loginbtn.tsx";
import { useSession } from "next-auth/react";

export default function Expenses() {
  const tableRef = useRef();
  const { data: session } = useSession();

  const { currentYear, setCurrentYear, gmailLoading, gmailResponse } =
    useExpensesContext();

  if (!session)
    return (
      <div className="min-h-screen flex flex-col justify-center items-center">
        <LoginBtn />
      </div>
    );

  return (
    <div className="min-h-screen flex flex-col">
      <Head>
        <title>Expenses</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div
        className={
          "fixed flex flex-row bg-gray-200 p-2 w-full justify-between z-50"
        }
      >
        <Box
          display="flex"
          alignItems="center"
          p={2}
          borderWidth={1}
          borderRadius="lg"
          borderColor={"blackAlpha.300"}
        >
          <Text marginRight="0.5rem">Year:</Text>
          <NumberInput
            defaultValue={currentYear}
            onChange={(valueString) => setCurrentYear(parseInt(valueString))}
            className="mb-2 md:mb-0"
          >
            <NumberInputField />
            <NumberInputStepper>
              <NumberIncrementStepper />
              <NumberDecrementStepper />
            </NumberInputStepper>
          </NumberInput>
        </Box>
        <LoginBtn />
      </div>
      <main className="flex-1 p-4 md:p-8">
        {gmailLoading && (
          <TopMessage>
            <Spinner /> Comprobando nuevos movimientos.
          </TopMessage>
        )}
        {gmailResponse?.length > 0 && (
          <TopMessage>
            Se registraron {gmailResponse.length} nuevos movimientos.
          </TopMessage>
        )}

        <div className="max-w-8xl mx-auto">
          <VStack spacing={6} w="100%">
            <Box
              ref={tableRef}
              borderWidth={1}
              borderRadius="lg"
              //overflow="hidden"
            ></Box>
            <Table />
          </VStack>
        </div>
      </main>
    </div>
  );
}

const TopMessage = ({ children }) => {
  return (
    <div
      className={
        "absolute top-5 left-5 flex flex-row gap-5 z-50 bg-white w-1/4 p-5 rounded border-2 border-gray-900"
      }
    >
      {children}
    </div>
  );
};
